00:00:03.628 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findUserRole
00:00:03.643 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:00:03.643 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
00:00:03.648 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserPermissions
00:00:03.648 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:00:03.648 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
00:00:03.780 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:00:03.780 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:00:03.780 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:00:03.783 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:00:03.783 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:00:03.783 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:00:03.788 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:00:03.789 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 29 ms
00:00:03.789 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:00:03.869 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.findUserWithDept_COUNT
00:00:03.869 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:00:03.869 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
00:00:03.873 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.findUserWithDept
00:00:03.873 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:00:03.873 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
00:00:03.993 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:03.993 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 115 ms
00:00:03.993 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2363,'admin','获取用户信息',69,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2020-6-15 0:00:03','内网IP|0|0|内网IP|内网IP' )
00:00:07.127 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:07.127 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 102 ms
00:00:07.127 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2364,'admin','获取菜单信息',1,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 0:00:07','内网IP|0|0|内网IP|内网IP' )
00:00:07.291 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:00:07.292 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:00:07.292 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:00:07.327 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:00:07.327 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
00:00:07.327 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:00:07.437 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:07.437 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 63 ms
00:00:07.437 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2365,'admin','获取系统所有URL',5,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 0:00:07','内网IP|0|0|内网IP|内网IP' )
00:00:09.327 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:09.327 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 107 ms
00:00:09.327 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2366,'admin','获取角色信息',0,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 0:00:09','内网IP|0|0|内网IP|内网IP' )
00:00:09.388 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:00:09.389 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:00:09.389 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:00:09.419 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:00:09.419 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:00:09.419 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:00:09.422 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:00:09.422 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:00:09.422 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:00:10.319 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:00:10.319 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:00:10.319 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:00:10.325 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:10.326 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 148 ms
00:00:10.326 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2367,'admin','获取部门信息',0,'com.xsz.system.controller.DeptController.index()','','127.0.0.1','2020-6-15 0:00:10','内网IP|0|0|内网IP|内网IP' )
00:00:10.365 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:00:10.365 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:00:10.365 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:00:11.548 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:11.548 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 114 ms
00:00:11.548 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2368,'admin','获取字典信息',3,'com.xsz.system.controller.DictController.index()','','127.0.0.1','2020-6-15 0:00:11','内网IP|0|0|内网IP|内网IP' )
00:00:17.538 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:17.538 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 120 ms
00:00:17.538 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2369,'admin','获取定时任务信息',2,'com.xsz.job.controller.JobController.index()','','127.0.0.1','2020-6-15 0:00:17','内网IP|0|0|内网IP|内网IP' )
00:00:17.651 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample_COUNT
00:00:17.651 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:00:17.651 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
00:00:17.653 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample
00:00:17.653 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:00:17.653 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
00:00:27.316 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.deleteByExample
00:00:27.316 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 27 ms
00:00:27.316 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_job WHERE ( ( JOB_ID in ( '3' ) ) )
00:00:27.489 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample_COUNT
00:00:27.489 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:00:27.489 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
00:00:27.493 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample
00:00:27.493 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:00:27.493 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
00:00:27.605 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:27.605 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 143 ms
00:00:27.605 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2370,'admin','删除任务',183,'com.xsz.job.controller.JobController.deleteJob()','ids: "3"','127.0.0.1','2020-6-15 0:00:27','内网IP|0|0|内网IP|内网IP' )
00:00:31.377 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:31.378 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 203 ms
00:00:31.378 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2371,'admin','获取调度日志信息',2,'com.xsz.job.controller.JobLogController.index()','','127.0.0.1','2020-6-15 0:00:31','内网IP|0|0|内网IP|内网IP' )
00:00:31.542 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample_COUNT
00:00:31.542 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 261 ms
00:00:31.542 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
00:00:31.546 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample
00:00:31.546 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:00:31.546 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
00:00:48.987 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample_COUNT
00:00:48.987 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:00:48.987 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
00:00:48.990 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample
00:00:48.990 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:00:48.990 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
00:00:49.072 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:49.072 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 130 ms
00:00:49.073 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2372,'admin','获取调度日志信息',0,'com.xsz.job.controller.JobLogController.index()','','127.0.0.1','2020-6-15 0:00:49','内网IP|0|0|内网IP|内网IP' )
00:00:50.461 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:50.462 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 210 ms
00:00:50.462 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2373,'admin','获取定时任务信息',0,'com.xsz.job.controller.JobController.index()','','127.0.0.1','2020-6-15 0:00:50','内网IP|0|0|内网IP|内网IP' )
00:00:50.468 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample_COUNT
00:00:50.469 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 67 ms
00:00:50.469 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
00:00:50.472 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample
00:00:50.472 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:00:50.472 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
00:00:55.930 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.CategoryMapper.findCategoryList
00:00:55.930 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 23 ms
00:00:55.930 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select tc.category_id categoryId,tc.category_name categoryName,tc.category_companyid categoryCompanyid,tc.category_name_en categoryNameEn from tb_category tc where 1=1 AND tc.category_companyid = 1
00:00:55.931 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.CategoryMapper.findCategoryList
00:00:55.931 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
00:00:55.931 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select tc.category_id categoryId,tc.category_name categoryName,tc.category_companyid categoryCompanyid,tc.category_name_en categoryNameEn from tb_category tc where 1=1 AND tc.category_companyid = 1
00:00:55.945 febs [http-nio-9020-exec-8] INFO  c.g.d.core.util.RuntimeUtils - OSGi support is false
00:00:55.997 febs [http-nio-9020-exec-8] INFO  c.g.d.core.DozerBeanMapperBuilder - Initializing Dozer. Version: 6.4.0, Thread Name: http-nio-9020-exec-8
00:00:56.128 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:56.128 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 193 ms
00:00:56.128 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2374,'admin','根据店铺id获取菜品父类信息不分页',23,'com.xsz.product.controller.CategoryController.categoryList()','','127.0.0.1','2020-6-15 0:00:56','内网IP|0|0|内网IP|内网IP' )
00:00:56.161 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:56.161 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 225 ms
00:00:56.161 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2375,'admin','根据店铺id获取菜品父类信息不分页',34,'com.xsz.product.controller.CategoryController.categoryList()','','127.0.0.1','2020-6-15 0:00:56','内网IP|0|0|内网IP|内网IP' )
00:00:56.162 febs [http-nio-9020-exec-8] INFO  c.g.d.c.c.r.LegacyPropertiesSettingsResolver - Trying to find Dozer configuration file: dozer.properties
00:00:56.162 febs [http-nio-9020-exec-8] INFO  c.g.d.c.c.r.LegacyPropertiesSettingsResolver - Failed to find dozer.properties via com.github.dozermapper.core.config.resolvers.LegacyPropertiesSettingsResolver.
00:00:56.927 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.DishesMapper.findDishesPage_COUNT
00:00:56.927 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 49 ms
00:00:56.927 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select td.spare_id as spareId,td.spare_code as spareCode,td.spare_name as spareName,td.spare_name_en as spareNameEn,td.spare_price as sparePrice, td.spare_status as spareStatus,td.spare_photo as sparePhoto,td.photo_path as photoPath from tb_category_dishes as cd right join tb_dishes as td on (cd.spare_id = td.spare_id) where 1=1
00:00:56.930 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.DishesMapper.findDishesPage
00:00:56.930 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:00:56.930 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select td.spare_id as spareId,td.spare_code as spareCode,td.spare_name as spareName,td.spare_name_en as spareNameEn,td.spare_price as sparePrice, td.spare_status as spareStatus,td.spare_photo as sparePhoto,td.photo_path as photoPath from tb_category_dishes as cd right join tb_dishes as td on (cd.spare_id = td.spare_id) where 1=1
00:00:57.108 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:00:57.108 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 176 ms
00:00:57.108 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2376,'admin','获取菜品列表分页',1000,'com.xsz.product.controller.DishesController.dishesList()','request: "QueryRequest{pageSize=10, pageNum=1}"  dishesForm: "DishesForm(spareId=null, spareCode=null, spareName=, spareNameEn=, spareModel=null, sparePrice=null, spareStatus=null, sparePhoto=null, remark=null, categoryId=, dishesCreateTime=, categoryIds=null, dishesModelList=null)"','127.0.0.1','2020-6-15 0:00:57','内网IP|0|0|内网IP|内网IP' )
00:01:05.749 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.CategoryMapper.findCategoryListByDishes
00:01:05.749 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:01:05.749 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select tc.category_id categoryId,tc.category_name categoryName,tc.category_companyid categoryCompanyid,tc.category_name_en categoryNameEn from tb_category tc right join tb_category_dishes as cd on (tc.category_id = cd.category_id) where cd.spare_id = 1
00:01:05.750 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.DishesMapper.selectByPrimaryKey
00:01:05.750 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:01:05.750 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT spare_id,spare_code,spare_name,spare_name_en,spare_kind,spare_model,spare_price,spare_status,spare_createtime,spare_updatetime,spare_createman,spare_updateman,spare_photo,photo_path,remark FROM tb_dishes WHERE spare_id = 1
00:01:05.892 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.DishesModelMapper.selectByExample_COUNT
00:01:05.892 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 80 ms
00:01:05.892 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT model_id,dishes_id,dishes_model,dishes_model_en,dishes_price FROM tb_dishes_model WHERE ( ( dishes_id= 1 ) )
00:01:05.894 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.DishesModelMapper.selectByExample
00:01:05.894 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:01:05.894 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT model_id,dishes_id,dishes_model,dishes_model_en,dishes_price FROM tb_dishes_model WHERE ( ( dishes_id= 1 ) )
00:01:05.928 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:05.928 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 174 ms
00:01:05.928 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2377,'admin','查看菜品详细信息',2,'com.xsz.product.controller.DishesController.getDishes()','dishesId: "1"','127.0.0.1','2020-6-15 0:01:05','内网IP|0|0|内网IP|内网IP' )
00:01:05.994 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:05.994 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 238 ms
00:01:05.994 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2378,'admin','根据菜品id获取菜品父类信息不分页',2,'com.xsz.product.controller.CategoryController.categoryListByDishes()','dishesId: "1"','127.0.0.1','2020-6-15 0:01:05','内网IP|0|0|内网IP|内网IP' )
00:01:06.084 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:06.084 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 188 ms
00:01:06.084 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2379,'admin','获取菜品规格信息分页',130,'com.xsz.product.controller.DishesModelController.dishesModelListPage()','request: "QueryRequest{pageSize=0, pageNum=0}"  dishesId: "1"','127.0.0.1','2020-6-15 0:01:06','内网IP|0|0|内网IP|内网IP' )
00:01:25.214 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.CategoryMapper.findCategoryList
00:01:25.214 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:01:25.215 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select tc.category_id categoryId,tc.category_name categoryName,tc.category_companyid categoryCompanyid,tc.category_name_en categoryNameEn from tb_category tc where 1=1 AND tc.category_companyid = 1
00:01:25.223 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.CategoryMapper.findCategoryList
00:01:25.223 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:01:25.223 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select tc.category_id categoryId,tc.category_name categoryName,tc.category_companyid categoryCompanyid,tc.category_name_en categoryNameEn from tb_category tc where 1=1 AND tc.category_companyid = 1
00:01:25.247 febs [http-nio-9020-exec-1] INFO  c.g.d.core.DozerBeanMapperBuilder - Initializing Dozer. Version: 6.4.0, Thread Name: http-nio-9020-exec-1
00:01:25.247 febs [http-nio-9020-exec-1] INFO  c.g.d.c.c.r.LegacyPropertiesSettingsResolver - Trying to find Dozer configuration file: dozer.properties
00:01:25.247 febs [http-nio-9020-exec-1] INFO  c.g.d.c.c.r.LegacyPropertiesSettingsResolver - Failed to find dozer.properties via com.github.dozermapper.core.config.resolvers.LegacyPropertiesSettingsResolver.
00:01:25.254 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.DishesMapper.findDishesPage_COUNT
00:01:25.254 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
00:01:25.254 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select td.spare_id as spareId,td.spare_code as spareCode,td.spare_name as spareName,td.spare_name_en as spareNameEn,td.spare_price as sparePrice, td.spare_status as spareStatus,td.spare_photo as sparePhoto,td.photo_path as photoPath from tb_category_dishes as cd right join tb_dishes as td on (cd.spare_id = td.spare_id) where 1=1
00:01:25.256 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.DishesMapper.findDishesPage
00:01:25.256 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:01:25.256 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select td.spare_id as spareId,td.spare_code as spareCode,td.spare_name as spareName,td.spare_name_en as spareNameEn,td.spare_price as sparePrice, td.spare_status as spareStatus,td.spare_photo as sparePhoto,td.photo_path as photoPath from tb_category_dishes as cd right join tb_dishes as td on (cd.spare_id = td.spare_id) where 1=1
00:01:25.378 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:25.378 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 161 ms
00:01:25.379 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2380,'admin','根据店铺id获取菜品父类信息不分页',3,'com.xsz.product.controller.CategoryController.categoryList()','','127.0.0.1','2020-6-15 0:01:25','内网IP|0|0|内网IP|内网IP' )
00:01:25.441 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:25.441 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 216 ms
00:01:25.441 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2381,'admin','根据店铺id获取菜品父类信息不分页',1,'com.xsz.product.controller.CategoryController.categoryList()','','127.0.0.1','2020-6-15 0:01:25','内网IP|0|0|内网IP|内网IP' )
00:01:25.507 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:25.507 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 247 ms
00:01:25.507 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2382,'admin','获取菜品列表分页',10,'com.xsz.product.controller.DishesController.dishesList()','request: "QueryRequest{pageSize=10, pageNum=1}"  dishesForm: "DishesForm(spareId=null, spareCode=null, spareName=, spareNameEn=, spareModel=null, sparePrice=null, spareStatus=null, sparePhoto=null, remark=null, categoryId=, dishesCreateTime=, categoryIds=null, dishesModelList=null)"','127.0.0.1','2020-6-15 0:01:25','内网IP|0|0|内网IP|内网IP' )
00:01:30.758 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:01:30.758 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 31 ms
00:01:30.758 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:30.782 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:01:30.782 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 53 ms
00:01:30.782 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:30.784 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:01:30.784 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:01:30.784 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:31.023 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:31.024 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 199 ms
00:01:31.025 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2383,'admin','获取用户信息',0,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2020-6-15 0:01:31','内网IP|0|0|内网IP|内网IP' )
00:01:31.837 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:01:31.837 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:01:31.837 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:31.850 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:01:31.850 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:01:31.850 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:31.907 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:31.907 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 109 ms
00:01:31.907 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2384,'admin','获取部门信息',0,'com.xsz.system.controller.DeptController.index()','','127.0.0.1','2020-6-15 0:01:31','内网IP|0|0|内网IP|内网IP' )
00:01:32.962 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:01:32.962 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 47 ms
00:01:32.962 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:01:32.963 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:01:32.963 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 26 ms
00:01:32.963 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:01:33.017 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:33.017 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 193 ms
00:01:33.017 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2385,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 0:01:33','内网IP|0|0|内网IP|内网IP' )
00:01:33.118 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:33.118 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 134 ms
00:01:33.118 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2386,'admin','获取系统所有URL',1,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 0:01:33','内网IP|0|0|内网IP|内网IP' )
00:01:50.875 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:01:50.875 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:01:50.875 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:50.902 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:01:50.902 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:01:50.902 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:50.962 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:50.962 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 131 ms
00:01:50.962 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2387,'admin','获取部门信息',0,'com.xsz.system.controller.DeptController.index()','','127.0.0.1','2020-6-15 0:01:50','内网IP|0|0|内网IP|内网IP' )
00:01:57.285 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:01:57.285 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 132 ms
00:01:57.285 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2388,'admin','获取字典信息',0,'com.xsz.system.controller.DictController.index()','','127.0.0.1','2020-6-15 0:01:57','内网IP|0|0|内网IP|内网IP' )
00:02:04.520 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:02:04.520 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:04.520 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:02:04.533 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:02:04.533 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:04.533 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:02:04.619 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:04.619 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 124 ms
00:02:04.619 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2389,'admin','获取部门信息',0,'com.xsz.system.controller.DeptController.index()','','127.0.0.1','2020-6-15 0:02:04','内网IP|0|0|内网IP|内网IP' )
00:02:10.674 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:10.674 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 102 ms
00:02:10.674 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2390,'admin','获取字典信息',0,'com.xsz.system.controller.DictController.index()','','127.0.0.1','2020-6-15 0:02:10','内网IP|0|0|内网IP|内网IP' )
00:02:18.629 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
00:02:18.629 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:18.629 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:02:18.631 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:02:18.631 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:18.631 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:18.632 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:02:18.632 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:18.632 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:18.931 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:18.931 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 276 ms
00:02:18.931 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2391,'admin','获取用户信息',1,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2020-6-15 0:02:18','内网IP|0|0|内网IP|内网IP' )
00:02:22.986 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:22.986 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 120 ms
00:02:22.986 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2392,'admin','获取字典信息',0,'com.xsz.system.controller.DictController.index()','','127.0.0.1','2020-6-15 0:02:22','内网IP|0|0|内网IP|内网IP' )
00:02:31.960 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:02:31.960 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:02:31.961 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:02:31.984 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:02:31.984 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:31.984 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:31.986 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:02:31.986 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:31.986 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:32.052 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:32.052 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 119 ms
00:02:32.052 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2393,'admin','获取角色信息',1,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 0:02:32','内网IP|0|0|内网IP|内网IP' )
00:02:45.966 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:02:45.966 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:45.966 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:45.968 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:02:45.968 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:45.968 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:47.769 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:02:47.769 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:47.769 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:47.771 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:02:47.771 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:47.771 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:49.775 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:02:49.775 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:49.775 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:49.777 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:02:49.777 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:49.777 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:52.996 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:02:52.996 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:02:52.996 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:02:53.030 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:02:53.030 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:02:53.030 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:02:53.053 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:53.054 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 143 ms
00:02:53.054 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2394,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 0:02:53','内网IP|0|0|内网IP|内网IP' )
00:02:53.164 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:53.164 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 120 ms
00:02:53.164 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2395,'admin','获取系统所有URL',0,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 0:02:53','内网IP|0|0|内网IP|内网IP' )
00:02:54.077 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:02:54.077 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:02:54.077 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:02:54.353 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:02:54.353 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 316 ms
00:02:54.353 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2396,'admin','获取角色信息',0,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 0:02:54','内网IP|0|0|内网IP|内网IP' )
00:02:54.358 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:02:54.358 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:54.358 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:02:54.360 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:02:54.360 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:02:54.360 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:03:11.201 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findById
00:03:11.201 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 23 ms
00:03:11.201 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
00:03:27.227 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findById
00:03:27.227 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:03:27.227 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
00:03:32.058 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:03:32.058 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:03:32.058 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:03:32.065 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:03:32.065 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 172 ms
00:03:32.066 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2397,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 0:03:32','内网IP|0|0|内网IP|内网IP' )
00:03:32.083 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:03:32.083 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:03:32.083 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:03:32.176 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:03:32.176 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 78 ms
00:03:32.176 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2398,'admin','获取系统所有URL',1,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 0:03:32','内网IP|0|0|内网IP|内网IP' )
00:03:44.508 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:03:44.508 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:03:44.508 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:04:04.052 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:04:04.052 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:04:04.052 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:04:07.388 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:04:07.388 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 135 ms
00:04:07.388 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2399,'admin','获取在线用户信息',2,'com.xsz.system.controller.SessionController.online()','','127.0.0.1','2020-6-15 0:04:07','内网IP|0|0|内网IP|内网IP' )
00:04:16.621 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:04:16.621 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:04:16.621 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:04:16.643 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:04:16.643 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:04:16.643 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:16.644 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:04:16.644 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:04:16.644 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:16.689 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:04:16.689 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 120 ms
00:04:16.689 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2400,'admin','获取角色信息',0,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 0:04:16','内网IP|0|0|内网IP|内网IP' )
00:04:38.332 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:04:38.332 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:04:38.332 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:04:38.359 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:04:38.359 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:04:38.359 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:04:38.390 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:04:38.390 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 167 ms
00:04:38.390 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2401,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 0:04:38','内网IP|0|0|内网IP|内网IP' )
00:04:38.478 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:04:38.478 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 106 ms
00:04:38.478 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2402,'admin','获取系统所有URL',1,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 0:04:38','内网IP|0|0|内网IP|内网IP' )
00:05:09.683 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByPrimaryKey
00:05:09.683 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:05:09.683 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE MENU_ID = 4
00:05:27.379 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:05:27.379 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:05:27.379 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:05:39.849 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:05:39.849 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:05:39.849 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( lower(menu_name)= '投票项目管理' and TYPE = 0 ) )
00:05:53.015 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.insert
00:05:53.015 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 22 ms
00:05:53.015 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 127,0,'投票项目管理','vote','vote:list','','0',,'2020-6-15 0:05:53', )
00:05:53.148 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:05:53.148 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:05:53.148 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:05:53.150 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:05:53.150 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:05:53.150 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:05:53.158 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:05:53.158 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:05:53.158 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:05:53.224 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:05:53.224 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 96 ms
00:05:53.224 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2403,'admin','新增菜单/按钮',134,'com.xsz.system.controller.MenuController.addMenu()','menu: "com.xsz.system.domain.Menu@513e3e1f"','127.0.0.1','2020-6-15 0:05:53','内网IP|0|0|内网IP|内网IP' )
00:16:15.996 febs [main] INFO  com.xsz.Application - Starting Application on DESKTOP-5G79DEK with PID 20532 (C:\bseawp\springbootbookcode\voteWeb\target\classes started by jiyu in C:\bseawp\springbootbookcode)
00:16:16.000 febs [main] INFO  com.xsz.Application - No active profile set, falling back to default profiles: default
00:16:16.064 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60015ef5: startup date [Mon Jun 15 00:16:16 CST 2020]; root of context hierarchy
00:16:17.123 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
00:16:17.388 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
00:16:17.449 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
00:16:17.450 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
00:16:17.450 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
00:16:17.451 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
00:16:17.451 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
00:16:17.451 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
00:16:17.451 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
00:16:17.498 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.xsz.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$73bdaaa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.541 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
00:16:17.551 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.683 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
00:16:17.684 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
00:16:17.692 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.712 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.xsz.common.config.RedisConfig$$EnhancerBySpringCGLIB$$9df96e75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b69f1b58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.776 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [com.xsz.common.config.FebsProperties$$EnhancerBySpringCGLIB$$206bf065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:17.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.xsz.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$c5d8bcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [com.xsz.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$10e940ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [com.xsz.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e9736c88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.189 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d04b10ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.191 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
00:16:18.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.658 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
00:16:18.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.702 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:18.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.023 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.xsz.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.xsz.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.xsz.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.xsz.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.xsz.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.316 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.xsz.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
00:16:19.746 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9020 (http)
00:16:19.756 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9020"]
00:16:19.764 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
00:16:19.764 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
00:16:19.767 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\jiyu\AppData\Local\Microsoft\WindowsApps;;.]
00:16:19.924 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
00:16:19.924 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3860 ms
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
00:16:20.059 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
00:16:20.060 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
00:16:20.073 febs [localhost-startStop-1] INFO  com.xsz.common.xss.XssFilter - ------------ xss filter init ------------
00:16:20.489 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
00:16:20.498 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
00:16:20.498 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
00:16:20.501 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
00:16:20.503 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
00:16:20.503 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'DESKTOP-5G79DEK1592151380490'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

00:16:20.503 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
00:16:20.503 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
00:16:20.504 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@22a6d75c
00:16:20.568 febs [main] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.queryList
00:16:20.568 febs [main] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
00:16:20.568 febs [main] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select job_id jobId,bean_name beanName,method_name methodName, params,cron_expression cronExpression,status,remark,create_time createTime from t_job order by job_id
00:16:22.163 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void com.xsz.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,com.xsz.common.exception.FileDownloadException
00:16:22.165 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int com.xsz.common.controller.TestController.testLimiter()
00:16:22.165 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job]}" onto public java.lang.String com.xsz.job.controller.JobController.index()
00:16:22.166 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.addJob(com.xsz.job.domain.Job)
00:16:22.166 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.deleteJob(java.lang.String)
00:16:22.166 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/pause]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.pauseJob(java.lang.String)
00:16:22.166 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/resume]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.resumeJob(java.lang.String)
00:16:22.166 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getJob]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.getJob(java.lang.Long)
00:16:22.166 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.job.controller.JobController.jobList(com.xsz.common.domain.QueryRequest,com.xsz.job.domain.Job)
00:16:22.167 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/checkCron]}" onto public boolean com.xsz.job.controller.JobController.checkCron(java.lang.String)
00:16:22.167 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.updateJob(com.xsz.job.domain.Job)
00:16:22.167 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/run]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.runJob(java.lang.String)
00:16:22.167 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getSysCronClazz]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.getSysCronClazz(com.xsz.job.domain.Job)
00:16:22.167 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.jobCsv(com.xsz.job.domain.Job)
00:16:22.167 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.jobExcel(com.xsz.job.domain.Job)
00:16:22.169 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog]}" onto public java.lang.String com.xsz.job.controller.JobLogController.index()
00:16:22.169 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobLogController.deleteJobLog(java.lang.String)
00:16:22.169 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.job.controller.JobLogController.jobLogList(com.xsz.common.domain.QueryRequest,com.xsz.job.domain.JobLog)
00:16:22.169 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobLogController.jobLogExcel(com.xsz.job.domain.JobLog)
00:16:22.169 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobLogController.jobLogCsv(com.xsz.job.domain.JobLog)
00:16:22.172 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/category],methods=[POST]}" onto public java.lang.String com.xsz.product.controller.CategoryController.index()
00:16:22.172 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryListByDishes/{dishesId}],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryListByDishes(java.lang.Long)
00:16:22.172 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryAdd],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryAdd(com.xsz.product.form.CategoryForm)
00:16:22.172 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/getCategory/{categoryId}],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.getCategory(java.lang.Long)
00:16:22.172 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryList],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryList()
00:16:22.172 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryDelete/{categoryId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryDelete(java.lang.Long)
00:16:22.173 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryUpdate],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryUpdate(com.xsz.product.form.CategoryForm)
00:16:22.173 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryListPage],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.CategoryController.categoryListPage(com.xsz.common.domain.QueryRequest,com.xsz.product.form.CategoryForm)
00:16:22.174 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishes],methods=[POST]}" onto public java.lang.String com.xsz.product.controller.DishesController.index()
00:16:22.174 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesAdd],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesAdd(com.xsz.product.form.DishesForm)
00:16:22.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesList],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.DishesController.dishesList(com.xsz.common.domain.QueryRequest,com.xsz.product.form.DishesForm)
00:16:22.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/getDishes/{dishesId}],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.getDishes(java.lang.Long)
00:16:22.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesUpdate],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesUpdate(com.xsz.product.form.DishesForm)
00:16:22.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesFileUpload/{dishesId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesFileUpload(java.lang.Long,javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartHttpServletRequest)
00:16:22.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesDelete],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesDelete(java.lang.String)
00:16:22.176 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesModelListPage/{dishesId}],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.DishesModelController.dishesModelListPage(com.xsz.common.domain.QueryRequest,java.lang.Long)
00:16:22.176 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesModelUpdate/{dishesId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesModelController.dishesModelUpdate(java.lang.Long,java.lang.String)
00:16:22.177 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesModelAdd/{dishesId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesModelController.dishesModelAdd(java.lang.Long,java.lang.String)
00:16:22.178 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/product]}" onto public java.lang.String com.xsz.product.controller.ProductController.index(org.springframework.ui.Model)
00:16:22.178 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.addUser(com.xsz.system.domain.User,java.lang.Long[])
00:16:22.179 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/updateUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updateUserProfile(com.xsz.system.domain.User)
00:16:22.179 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/getUser]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.getUser(java.lang.Long)
00:16:22.180 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.ProductController.productList(com.xsz.common.domain.QueryRequest,com.xsz.product.domain.Product)
00:16:22.180 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.userCsv(com.xsz.system.domain.User)
00:16:22.180 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/checkUserName]}" onto public boolean com.xsz.product.controller.ProductController.checkUserName(java.lang.String,java.lang.String)
00:16:22.180 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/regist]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.regist(com.xsz.system.domain.User)
00:16:22.180 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/theme]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updateTheme(com.xsz.system.domain.User)
00:16:22.180 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updateUser(com.xsz.system.domain.User,java.lang.Long[])
00:16:22.181 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.deleteUsers(java.lang.String)
00:16:22.181 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.userExcel(com.xsz.system.domain.User)
00:16:22.181 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/checkPassword]}" onto public boolean com.xsz.product.controller.ProductController.checkPassword(java.lang.String)
00:16:22.181 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/updatePassword]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updatePassword(java.lang.String)
00:16:22.181 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/changeAvatar]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.changeAvatar(java.lang.String)
00:16:22.181 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/getUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.getUserProfile(java.lang.Long)
00:16:22.182 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/profile]}" onto public java.lang.String com.xsz.product.controller.ProductController.profileIndex(org.springframework.ui.Model)
00:16:22.182 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String com.xsz.system.controller.DeptController.index()
00:16:22.182 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.addRole(com.xsz.system.domain.Dept)
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.getDeptTree()
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.getDept(java.lang.Long)
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<com.xsz.system.domain.Dept> com.xsz.system.controller.DeptController.deptList(com.xsz.system.domain.Dept)
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.deptCsv(com.xsz.system.domain.Dept)
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.updateRole(com.xsz.system.domain.Dept)
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.deptExcel(com.xsz.system.domain.Dept)
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean com.xsz.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
00:16:22.183 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.deleteDepts(java.lang.String)
00:16:22.184 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String com.xsz.system.controller.DictController.index()
00:16:22.184 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.updateDict(com.xsz.system.domain.Dict)
00:16:22.184 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.addDict(com.xsz.system.domain.Dict)
00:16:22.184 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.getDict(java.lang.Long)
00:16:22.184 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.dictCsv(com.xsz.system.domain.Dict)
00:16:22.185 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.DictController.dictList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.Dict)
00:16:22.185 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.dictExcel(com.xsz.system.domain.Dict)
00:16:22.185 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.deleteDicts(java.lang.String)
00:16:22.185 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String com.xsz.system.controller.LogController.index()
00:16:22.185 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.LogController.logList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.SysLog)
00:16:22.186 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LogController.logExcel(com.xsz.system.domain.SysLog)
00:16:22.186 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LogController.logCsv(com.xsz.system.domain.SysLog)
00:16:22.186 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LogController.deleteLogss(java.lang.String)
00:16:22.186 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String com.xsz.system.controller.LoginController.index(org.springframework.ui.Model)
00:16:22.187 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
00:16:22.187 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.xsz.system.controller.LoginController.login()
00:16:22.187 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String com.xsz.system.controller.LoginController.forbid()
00:16:22.187 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void com.xsz.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
00:16:22.187 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String com.xsz.system.controller.LoginController.redirectIndex()
00:16:22.188 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String com.xsz.system.controller.MenuController.index()
00:16:22.188 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenuButtonTree()
00:16:22.188 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getUserMenu(java.lang.String)
00:16:22.188 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenuTree()
00:16:22.188 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.addMenu(com.xsz.system.domain.Menu)
00:16:22.189 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.deleteMenus(java.lang.String)
00:16:22.189 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.updateMenu(com.xsz.system.domain.Menu)
00:16:22.189 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<com.xsz.system.domain.Menu> com.xsz.system.controller.MenuController.menuList(com.xsz.system.domain.Menu)
00:16:22.189 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.menuCsv(com.xsz.system.domain.Menu)
00:16:22.189 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenu(java.lang.String)
00:16:22.189 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenu(java.lang.Long)
00:16:22.189 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean com.xsz.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
00:16:22.190 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> com.xsz.system.controller.MenuController.getAllUrl()
00:16:22.190 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.menuExcel(com.xsz.system.domain.Menu)
00:16:22.191 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.get(java.lang.String)
00:16:22.191 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.keys(java.lang.String)
00:16:22.191 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.set(java.lang.String)
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.exists(java.lang.String)
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.del(java.lang.String)
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String com.xsz.system.controller.RedisController.getKeysSize()
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.pttl(java.lang.String)
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String com.xsz.system.controller.RedisController.getMemoryInfo()
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.pexpire(java.lang.String)
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String com.xsz.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
00:16:22.192 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String com.xsz.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
00:16:22.193 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String com.xsz.system.controller.RoleController.index()
00:16:22.193 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.getRole(java.lang.Long)
00:16:22.193 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.addRole(com.xsz.system.domain.Role,java.lang.Long[])
00:16:22.196 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.updateRole(com.xsz.system.domain.Role,java.lang.Long[])
00:16:22.196 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.deleteRoles(java.lang.String)
00:16:22.197 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.RoleController.roleList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.Role)
00:16:22.197 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.roleCsv(com.xsz.system.domain.Role)
00:16:22.197 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.roleExcel(com.xsz.system.domain.Role)
00:16:22.197 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean com.xsz.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
00:16:22.197 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.SessionController.list()
00:16:22.197 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String com.xsz.system.controller.SessionController.online()
00:16:22.197 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.SessionController.forceLogout(java.lang.String)
00:16:22.198 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user]}" onto public java.lang.String com.xsz.system.controller.UserController.index(org.springframework.ui.Model)
00:16:22.198 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.UserController.userList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.User)
00:16:22.199 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.addUser(com.xsz.system.domain.User,java.lang.Long[])
00:16:22.199 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/updateUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updateUserProfile(com.xsz.system.domain.User)
00:16:22.199 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/getUser]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.getUser(java.lang.Long)
00:16:22.199 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.userCsv(com.xsz.system.domain.User)
00:16:22.199 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/checkUserName]}" onto public boolean com.xsz.system.controller.UserController.checkUserName(java.lang.String,java.lang.String)
00:16:22.199 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/regist]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.regist(com.xsz.system.domain.User)
00:16:22.199 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/theme]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updateTheme(com.xsz.system.domain.User)
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updateUser(com.xsz.system.domain.User,java.lang.Long[])
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.deleteUsers(java.lang.String)
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.userExcel(com.xsz.system.domain.User)
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/checkPassword]}" onto public boolean com.xsz.system.controller.UserController.checkPassword(java.lang.String)
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/updatePassword]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updatePassword(java.lang.String)
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/changeAvatar]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.changeAvatar(java.lang.String)
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/getUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.getUserProfile(java.lang.Long)
00:16:22.200 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/profile]}" onto public java.lang.String com.xsz.system.controller.UserController.profileIndex(org.springframework.ui.Model)
00:16:22.202 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote]}" onto public java.lang.String com.xsz.vote.controller.VoteController.index(org.springframework.ui.Model)
00:16:22.202 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.addUser(com.xsz.system.domain.User,java.lang.Long[])
00:16:22.202 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/updateUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updateUserProfile(com.xsz.system.domain.User)
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.vote.controller.VoteController.voteList(com.xsz.common.domain.QueryRequest,com.xsz.vote.domain.Vote)
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/getUser]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.getUser(java.lang.Long)
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.userCsv(com.xsz.system.domain.User)
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/checkUserName]}" onto public boolean com.xsz.vote.controller.VoteController.checkUserName(java.lang.String,java.lang.String)
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/regist]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.regist(com.xsz.system.domain.User)
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/theme]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updateTheme(com.xsz.system.domain.User)
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updateUser(com.xsz.system.domain.User,java.lang.Long[])
00:16:22.203 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.deleteUsers(java.lang.String)
00:16:22.204 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.userExcel(com.xsz.system.domain.User)
00:16:22.204 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/checkPassword]}" onto public boolean com.xsz.vote.controller.VoteController.checkPassword(java.lang.String)
00:16:22.204 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/updatePassword]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updatePassword(java.lang.String)
00:16:22.204 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/changeAvatar]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.changeAvatar(java.lang.String)
00:16:22.204 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/getUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.getUserProfile(java.lang.Long)
00:16:22.204 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/profile]}" onto public java.lang.String com.xsz.vote.controller.VoteController.profileIndex(org.springframework.ui.Model)
00:16:22.204 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String com.xsz.web.controller.ArticleController.index()
00:16:22.205 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.ArticleController.queryArticle(java.lang.String)
00:16:22.205 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String com.xsz.web.controller.MovieController.movieHot()
00:16:22.205 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getMoiveHot()
00:16:22.205 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getComments(java.lang.String)
00:16:22.205 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getMovieComing()
00:16:22.205 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String com.xsz.web.controller.MovieController.movieComing()
00:16:22.206 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getDetail(java.lang.String)
00:16:22.206 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
00:16:22.206 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
00:16:22.206 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String com.xsz.web.controller.OneIsAllController.essayIndex()
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String com.xsz.web.controller.OneIsAllController.paintIndex()
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getOneList()
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getReadingList()
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String com.xsz.web.controller.OneIsAllController.yuwenIndex()
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getEssayComments(java.lang.String)
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.WeatherController.queryWeather(java.lang.String)
00:16:22.207 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String com.xsz.web.controller.WeatherController.weather()
00:16:22.208 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
00:16:22.210 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
00:16:22.211 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
00:16:22.211 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
00:16:22.214 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
00:16:22.214 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
00:16:22.358 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
00:16:22.601 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
00:16:22.740 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60015ef5: startup date [Mon Jun 15 00:16:16 CST 2020]; root of context hierarchy
00:16:22.808 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
00:16:22.808 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
00:16:22.808 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/images/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
00:16:22.833 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
00:16:22.833 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in controllerExceptionHandler
00:16:22.948 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
00:16:23.647 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
00:16:23.649 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
00:16:23.649 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
00:16:23.655 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
00:16:23.656 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
00:16:23.660 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
00:16:23.660 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
00:16:23.671 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
00:16:23.684 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
00:16:23.916 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
00:16:24.157 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9020"]
00:16:24.168 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
00:16:24.181 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9020 (http) with context path ''
00:16:24.184 febs [main] INFO  com.xsz.Application - Started Application in 8.833 seconds (JVM running for 9.513)
00:16:24.187 febs [main] INFO  c.x.c.r.ApplicationStartupRunner - XSZ 权限系统启动完毕，地址：http://192.168.3.30:9020
00:16:24.918 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
00:16:24.978 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
00:16:24.979 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "DESKTOP-5G79DEK1592149914068"'s failed in-progress jobs.
00:16:25.088 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-5G79DEK1592151380490 started.
00:16:30.304 febs [http-nio-9020-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
00:16:30.304 febs [http-nio-9020-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
00:16:30.325 febs [http-nio-9020-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
00:16:30.338 febs [http-nio-9020-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
00:16:30.687 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:16:30.687 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 231 ms
00:16:30.687 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2404,'admin','访问系统',3,'com.xsz.system.controller.LoginController.index()','user: "User{userId=167, username='admin', password='8b9196ebe9f537da256b424f1fc93041', deptId=1, deptName='null', email='', mobile='', status='1', crateTime=Fri May 29 22:02:05 CST 2020, modifyTime=null, lastLoginTime=Sat May 30 17:12:33 CST 2020, ssex='0', theme='green', avatar='default.jpg', description='null', roleName='null'}"','127.0.0.1','2020-6-15 0:16:30','内网IP|0|0|内网IP|内网IP' )
00:16:31.958 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserMenus
00:16:31.958 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 120 ms
00:16:31.958 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:16:47.727 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.selectByExample
00:16:47.727 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:16:47.727 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( ( lower(username)= 'admin' ) )
00:16:47.756 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.updateByExampleSelective
00:16:47.756 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 22 ms
00:16:47.756 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2020-6-15 0:16:47' WHERE ( ( lower(username)= 'admin' ) )
00:16:47.998 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:16:47.998 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 85 ms
00:16:47.998 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2405,'admin','访问系统',0,'com.xsz.system.controller.LoginController.index()','user: "User{userId=167, username='admin', password='8b9196ebe9f537da256b424f1fc93041', deptId=1, deptName='null', email='', mobile='', status='1', crateTime=Fri May 29 22:02:05 CST 2020, modifyTime=null, lastLoginTime=Sun Jun 14 23:59:58 CST 2020, ssex='0', theme='green', avatar='default.jpg', description='null', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2020-6-15 0:16:47','内网IP|0|0|内网IP|内网IP' )
00:16:48.094 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserMenus
00:16:48.094 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
00:16:48.094 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:17:01.271 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findUserRole
00:17:01.272 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:01.272 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
00:17:01.276 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserPermissions
00:17:01.276 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:17:01.276 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
00:17:01.380 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:17:01.380 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
00:17:01.380 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:17:01.434 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:01.434 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 153 ms
00:17:01.434 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2406,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 0:17:01','内网IP|0|0|内网IP|内网IP' )
00:17:01.436 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:17:01.436 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
00:17:01.436 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:17:01.685 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:01.685 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 217 ms
00:17:01.685 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2407,'admin','获取系统所有URL',22,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 0:17:01','内网IP|0|0|内网IP|内网IP' )
00:17:07.622 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:17:07.623 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
00:17:07.623 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:17:07.644 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:07.644 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 131 ms
00:17:07.644 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2408,'admin','获取角色信息',2,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 0:17:07','内网IP|0|0|内网IP|内网IP' )
00:17:07.680 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:17:07.680 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:07.680 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:17:07.685 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:17:07.685 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:17:07.685 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:17:11.654 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:17:11.654 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
00:17:11.654 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
00:17:11.676 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:17:11.676 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:17:11.677 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:17:11.810 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:11.810 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 289 ms
00:17:11.810 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2409,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 0:17:11','内网IP|0|0|内网IP|内网IP' )
00:17:11.843 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:11.843 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 138 ms
00:17:11.843 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2410,'admin','获取系统所有URL',2,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 0:17:11','内网IP|0|0|内网IP|内网IP' )
00:17:14.546 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:17:14.546 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:14.546 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:17:14.570 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:17:14.570 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:14.570 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:17:14.573 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:17:14.573 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:14.573 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:17:14.644 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:14.644 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 138 ms
00:17:14.644 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2411,'admin','获取角色信息',0,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 0:17:14','内网IP|0|0|内网IP|内网IP' )
00:17:20.392 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findById
00:17:20.392 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:17:20.392 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
00:17:23.164 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.updateByPrimaryKeySelective
00:17:23.165 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
00:17:23.165 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2020-6-15 0:17:23' WHERE ROLE_ID = 1
00:17:23.179 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.deleteByExample
00:17:23.179 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
00:17:23.179 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( ( role_id= 1 ) )
00:17:23.195 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.195 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 15 ms
00:17:23.195 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
00:17:23.196 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.197 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.197 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
00:17:23.198 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.198 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.198 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
00:17:23.199 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.199 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.200 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,67 )
00:17:23.201 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.201 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.201 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
00:17:23.202 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.202 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.202 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
00:17:23.203 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.203 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.203 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
00:17:23.204 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.204 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.205 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
00:17:23.206 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.206 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.206 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
00:17:23.207 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.207 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.207 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
00:17:23.208 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.208 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.208 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
00:17:23.210 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.210 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:23.210 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
00:17:23.211 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.211 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.211 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
00:17:23.212 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.212 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.212 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
00:17:23.214 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.214 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.214 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,66 )
00:17:23.215 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.215 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.215 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
00:17:23.216 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.216 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.216 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
00:17:23.217 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.218 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.218 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,64 )
00:17:23.219 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.219 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.219 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
00:17:23.220 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.220 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.220 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
00:17:23.221 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.222 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.222 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,65 )
00:17:23.223 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.223 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.223 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
00:17:23.224 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.224 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.224 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
00:17:23.225 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.225 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.225 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
00:17:23.227 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.227 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:23.227 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
00:17:23.228 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.228 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.228 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
00:17:23.229 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.229 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.229 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
00:17:23.230 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.231 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.231 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
00:17:23.232 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.232 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.232 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
00:17:23.233 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.233 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.233 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
00:17:23.234 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.234 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.234 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
00:17:23.236 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.236 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.236 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
00:17:23.237 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.237 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.237 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
00:17:23.238 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.238 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.238 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
00:17:23.239 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.239 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.239 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
00:17:23.240 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.240 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.240 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
00:17:23.241 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.242 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.242 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,101 )
00:17:23.243 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.243 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.243 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,102 )
00:17:23.244 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.244 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.244 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,103 )
00:17:23.245 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.245 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.245 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,104 )
00:17:23.247 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.299 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.299 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,105 )
00:17:23.301 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.301 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:23.301 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,106 )
00:17:23.302 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.302 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.302 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,107 )
00:17:23.303 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.303 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.303 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,108 )
00:17:23.305 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.305 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:23.305 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,109 )
00:17:23.306 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.306 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.306 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,110 )
00:17:23.307 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.307 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.307 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
00:17:23.308 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.308 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.308 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,114 )
00:17:23.310 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.310 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.310 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,115 )
00:17:23.311 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.311 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.311 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
00:17:23.312 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.312 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.312 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
00:17:23.313 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.313 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.313 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
00:17:23.315 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.315 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:23.315 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
00:17:23.316 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.316 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.316 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
00:17:23.317 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.317 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.317 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
00:17:23.318 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.318 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.318 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
00:17:23.320 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.320 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.320 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
00:17:23.321 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.321 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.321 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
00:17:23.322 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMenuMapper.insert
00:17:23.322 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.322 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
00:17:23.433 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
00:17:23.433 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.433 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:17:23.435 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
00:17:23.435 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:23.435 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:17:23.501 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:23.501 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 87 ms
00:17:23.501 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2412,'admin','修改角色',257,'com.xsz.system.controller.RoleController.updateRole()','role: "com.xsz.system.domain.Role@661de9e6"  menuId: "[Ljava.lang.Long;@461f2d18"','127.0.0.1','2020-6-15 0:17:23','内网IP|0|0|内网IP|内网IP' )
00:17:38.031 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.selectByExample
00:17:38.032 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:17:38.032 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( ( lower(username)= 'admin' ) )
00:17:38.091 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.updateByExampleSelective
00:17:38.091 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:17:38.091 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2020-6-15 0:17:38' WHERE ( ( lower(username)= 'admin' ) )
00:17:38.322 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:38.322 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 119 ms
00:17:38.322 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2413,'admin','访问系统',0,'com.xsz.system.controller.LoginController.index()','user: "User{userId=167, username='admin', password='8b9196ebe9f537da256b424f1fc93041', deptId=1, deptName='null', email='', mobile='', status='1', crateTime=Fri May 29 22:02:05 CST 2020, modifyTime=null, lastLoginTime=Mon Jun 15 00:16:48 CST 2020, ssex='0', theme='green', avatar='default.jpg', description='null', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2020-6-15 0:17:38','内网IP|0|0|内网IP|内网IP' )
00:17:38.369 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserMenus
00:17:38.369 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:17:38.369 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:17:40.894 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findUserRole
00:17:40.894 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:40.894 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
00:17:40.896 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserPermissions
00:17:40.896 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:17:40.896 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
00:17:40.942 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
00:17:40.942 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 15 ms
00:17:40.942 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
00:17:41.007 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.vote.dao.VoteMapper.selectByExample_COUNT
00:17:41.007 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 32 ms
00:17:41.007 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,TITLE,DEADLINETIME,ISALL,HEADCONTENT,FOOTERCONTENT,ALLOWSHOWRESULT,ALLOWANONYMAT,FROMUSERID,STATUS,REMARKS,DELMARK,CREATETIME,MODIFYTIME,CREATEUSERID,MODIFYUSERID,TO_USER,TO_PARTY,TO_TAG,PIC_URL,VOTEURL,VOTECOUNT FROM tb_d_vote order by CREATETIME
00:17:41.122 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:17:41.122 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 111 ms
00:17:41.122 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2414,'admin','获取投票项目信息',50,'com.xsz.vote.controller.VoteController.voteList()','request: "QueryRequest{pageSize=10, pageNum=1}"  vote: "com.xsz.vote.domain.Vote@10ca88a"','127.0.0.1','2020-6-15 0:17:41','内网IP|0|0|内网IP|内网IP' )
00:19:37.932 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.vote.dao.VoteMapper.selectByExample_COUNT
00:19:37.932 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:19:37.932 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,TITLE,DEADLINETIME,ISALL,HEADCONTENT,FOOTERCONTENT,ALLOWSHOWRESULT,ALLOWANONYMAT,FROMUSERID,STATUS,REMARKS,DELMARK,CREATETIME,MODIFYTIME,CREATEUSERID,MODIFYUSERID,TO_USER,TO_PARTY,TO_TAG,PIC_URL,VOTEURL,VOTECOUNT FROM tb_d_vote order by CREATETIME
00:19:37.934 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.vote.dao.VoteMapper.selectByExample
00:19:37.934 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:19:37.934 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,TITLE,DEADLINETIME,ISALL,HEADCONTENT,FOOTERCONTENT,ALLOWSHOWRESULT,ALLOWANONYMAT,FROMUSERID,STATUS,REMARKS,DELMARK,CREATETIME,MODIFYTIME,CREATEUSERID,MODIFYUSERID,TO_USER,TO_PARTY,TO_TAG,PIC_URL,VOTEURL,VOTECOUNT FROM tb_d_vote order by CREATETIME
00:19:38.082 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:19:38.082 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 144 ms
00:19:38.082 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2415,'admin','获取投票项目信息',9,'com.xsz.vote.controller.VoteController.voteList()','request: "QueryRequest{pageSize=10, pageNum=1}"  vote: "com.xsz.vote.domain.Vote@5283e352"','127.0.0.1','2020-6-15 0:19:38','内网IP|0|0|内网IP|内网IP' )
00:20:59.446 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.vote.dao.VoteMapper.selectByExample_COUNT
00:20:59.446 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 20 ms
00:20:59.446 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,TITLE,DEADLINETIME,ISALL,HEADCONTENT,FOOTERCONTENT,ALLOWSHOWRESULT,ALLOWANONYMAT,FROMUSERID,STATUS,REMARKS,DELMARK,CREATETIME,MODIFYTIME,CREATEUSERID,MODIFYUSERID,TO_USER,TO_PARTY,TO_TAG,PIC_URL,VOTEURL,VOTECOUNT FROM tb_d_vote order by CREATETIME
00:20:59.448 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.vote.dao.VoteMapper.selectByExample
00:20:59.448 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:20:59.448 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,TITLE,DEADLINETIME,ISALL,HEADCONTENT,FOOTERCONTENT,ALLOWSHOWRESULT,ALLOWANONYMAT,FROMUSERID,STATUS,REMARKS,DELMARK,CREATETIME,MODIFYTIME,CREATEUSERID,MODIFYUSERID,TO_USER,TO_PARTY,TO_TAG,PIC_URL,VOTEURL,VOTECOUNT FROM tb_d_vote order by CREATETIME
00:20:59.619 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
00:20:59.619 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 167 ms
00:20:59.619 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2416,'admin','获取投票项目信息',29,'com.xsz.vote.controller.VoteController.voteList()','request: "QueryRequest{pageSize=10, pageNum=1}"  vote: "com.xsz.vote.domain.Vote@23b7992d"','127.0.0.1','2020-6-15 0:20:59','内网IP|0|0|内网IP|内网IP' )
01:16:30.339 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Validating all active sessions...
01:16:30.354 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Finished session validation.  No sessions were stopped.
01:58:55.348 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.selectByExample
01:58:55.348 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
01:58:55.348 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( ( lower(username)= 'admin' ) )
01:58:55.365 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.updateByExampleSelective
01:58:55.365 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
01:58:55.365 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2020-6-15 1:58:55' WHERE ( ( lower(username)= 'admin' ) )
01:58:55.632 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:58:55.632 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 129 ms
01:58:55.632 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2417,'admin','访问系统',0,'com.xsz.system.controller.LoginController.index()','user: "User{userId=167, username='admin', password='8b9196ebe9f537da256b424f1fc93041', deptId=1, deptName='null', email='', mobile='', status='1', crateTime=Fri May 29 22:02:05 CST 2020, modifyTime=null, lastLoginTime=Mon Jun 15 00:17:38 CST 2020, ssex='0', theme='green', avatar='default.jpg', description='null', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2020-6-15 1:58:55','内网IP|0|0|内网IP|内网IP' )
01:58:55.820 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserMenus
01:58:55.820 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 65 ms
01:58:55.820 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
01:58:58.569 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findUserRole
01:58:58.569 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
01:58:58.569 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
01:58:58.572 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserPermissions
01:58:58.572 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
01:58:58.572 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
01:58:58.627 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
01:58:58.627 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
01:58:58.627 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
01:58:58.628 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
01:58:58.628 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
01:58:58.628 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
01:58:58.727 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
01:58:58.727 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 84 ms
01:58:58.727 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
01:58:58.798 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:58:58.798 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 91 ms
01:58:58.799 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2418,'admin','获取用户信息',44,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2020-6-15 1:58:58','内网IP|0|0|内网IP|内网IP' )
01:59:15.157 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
01:59:15.157 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
01:59:15.157 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
01:59:15.181 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
01:59:15.181 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
01:59:15.181 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
01:59:15.182 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
01:59:15.182 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
01:59:15.182 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
01:59:15.232 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:59:15.232 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 103 ms
01:59:15.232 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2419,'admin','获取角色信息',0,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 1:59:15','内网IP|0|0|内网IP|内网IP' )
01:59:23.600 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
01:59:23.600 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
01:59:23.600 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
01:59:23.628 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
01:59:23.628 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
01:59:23.628 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
01:59:23.642 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:59:23.643 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 129 ms
01:59:23.643 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2420,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 1:59:23','内网IP|0|0|内网IP|内网IP' )
01:59:23.743 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:59:23.743 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 99 ms
01:59:23.743 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2421,'admin','获取系统所有URL',1,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 1:59:23','内网IP|0|0|内网IP|内网IP' )
01:59:25.139 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
01:59:25.139 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
01:59:25.139 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
01:59:25.158 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
01:59:25.158 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
01:59:25.158 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
01:59:25.355 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:59:25.355 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 262 ms
01:59:25.355 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2422,'admin','获取部门信息',1,'com.xsz.system.controller.DeptController.index()','','127.0.0.1','2020-6-15 1:59:25','内网IP|0|0|内网IP|内网IP' )
01:59:30.818 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
01:59:30.818 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
01:59:30.818 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
01:59:31.921 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:59:31.921 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 138 ms
01:59:31.921 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2423,'admin','获取字典信息',4,'com.xsz.system.controller.DictController.index()','','127.0.0.1','2020-6-15 1:59:31','内网IP|0|0|内网IP|内网IP' )
01:59:43.821 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
01:59:43.821 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 126 ms
01:59:43.821 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2424,'admin','获取在线用户信息',2,'com.xsz.system.controller.SessionController.online()','','127.0.0.1','2020-6-15 1:59:43','内网IP|0|0|内网IP|内网IP' )
01:59:45.354 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.selectByExample_COUNT
01:59:45.355 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 241 ms
01:59:45.355 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
01:59:45.359 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.selectByExample
01:59:45.359 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
01:59:45.359 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
02:00:00.599 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:00:00.599 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 140 ms
02:00:00.599 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2425,'admin','获取天气信息',2,'com.xsz.web.controller.WeatherController.weather()','','127.0.0.1','2020-6-15 2:00:00','内网IP|0|0|内网IP|内网IP' )
02:00:03.121 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:00:03.121 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 83 ms
02:00:03.122 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2426,'admin','获取每日一文信息',2,'com.xsz.web.controller.ArticleController.index()','','127.0.0.1','2020-6-15 2:00:03','内网IP|0|0|内网IP|内网IP' )
02:00:07.102 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:00:07.102 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 144 ms
02:00:07.102 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2427,'admin','获取即将上映电影信息',3,'com.xsz.web.controller.MovieController.movieComing()','','127.0.0.1','2020-6-15 2:00:07','内网IP|0|0|内网IP|内网IP' )
02:00:12.367 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:00:12.367 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 86 ms
02:00:12.367 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2428,'admin','获取定时任务信息',4,'com.xsz.job.controller.JobController.index()','','127.0.0.1','2020-6-15 2:00:12','内网IP|0|0|内网IP|内网IP' )
02:00:12.418 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample_COUNT
02:00:12.418 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
02:00:12.418 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
02:00:12.420 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample
02:00:12.420 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:00:12.421 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
02:00:27.067 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:00:27.067 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 73 ms
02:00:27.067 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2429,'admin','获取调度日志信息',4,'com.xsz.job.controller.JobLogController.index()','','127.0.0.1','2020-6-15 2:00:27','内网IP|0|0|内网IP|内网IP' )
02:00:27.215 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample_COUNT
02:00:27.215 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 159 ms
02:00:27.215 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
02:00:27.217 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample
02:00:27.217 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:00:27.217 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
02:00:33.281 febs [http-nio-9020-exec-1] INFO  c.g.d.core.util.RuntimeUtils - OSGi support is false
02:00:33.283 febs [http-nio-9020-exec-1] INFO  c.g.d.core.DozerBeanMapperBuilder - Initializing Dozer. Version: 6.4.0, Thread Name: http-nio-9020-exec-1
02:00:33.291 febs [http-nio-9020-exec-1] INFO  c.g.d.c.c.r.LegacyPropertiesSettingsResolver - Trying to find Dozer configuration file: dozer.properties
02:00:33.291 febs [http-nio-9020-exec-1] INFO  c.g.d.c.c.r.LegacyPropertiesSettingsResolver - Failed to find dozer.properties via com.github.dozermapper.core.config.resolvers.LegacyPropertiesSettingsResolver.
02:00:33.491 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.product.dao.CategoryMapper.selectByExample_COUNT
02:00:33.491 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 24 ms
02:00:33.491 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT category_id,category_name,category_companyid,category_name_en,createtime,updatetime,createman,updateman FROM tb_category WHERE ( ( category_companyid= 1 ) ) order by createtime desc
02:00:33.566 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:00:33.566 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 72 ms
02:00:33.567 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2430,'admin','获取菜品父类信息分页',216,'com.xsz.product.controller.CategoryController.categoryListPage()','request: "QueryRequest{pageSize=10, pageNum=1}"  categoryForm: "CategoryForm(categoryId=null, categoryName=, categoryCompanyid=null, categoryNameEn=, categoryCreateTime=)"','127.0.0.1','2020-6-15 2:00:33','内网IP|0|0|内网IP|内网IP' )
02:00:36.146 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
02:00:36.146 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:00:36.146 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
02:01:22.628 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
02:01:22.628 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:01:22.628 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
02:01:22.630 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
02:01:22.630 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:01:22.630 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
02:01:22.631 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
02:01:22.631 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:01:22.631 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
02:01:22.757 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:01:22.757 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 100 ms
02:01:22.757 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2431,'admin','获取用户信息',1,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2020-6-15 2:01:22','内网IP|0|0|内网IP|内网IP' )
02:01:37.890 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
02:01:37.890 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:01:37.890 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
02:01:37.911 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
02:01:37.911 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
02:01:37.911 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
02:01:37.913 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
02:01:37.913 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:01:37.913 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
02:01:38.025 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:01:38.025 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 164 ms
02:01:38.025 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2432,'admin','获取角色信息',0,'com.xsz.system.controller.RoleController.index()','','127.0.0.1','2020-6-15 2:01:38','内网IP|0|0|内网IP|内网IP' )
02:01:48.939 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
02:01:48.939 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
02:01:48.939 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
02:01:48.962 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
02:01:48.962 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
02:01:48.962 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
02:01:48.968 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:01:48.968 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 114 ms
02:01:48.968 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2433,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','127.0.0.1','2020-6-15 2:01:48','内网IP|0|0|内网IP|内网IP' )
02:01:49.069 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:01:49.069 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 90 ms
02:01:49.069 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2434,'admin','获取系统所有URL',1,'com.xsz.system.controller.MenuController.getAllUrl()','','127.0.0.1','2020-6-15 2:01:49','内网IP|0|0|内网IP|内网IP' )
02:02:00.255 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
02:02:00.255 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
02:02:00.255 febs [http-nio-9020-exec-9] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
02:02:03.181 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
02:02:03.181 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:02:03.181 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
02:02:03.193 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
02:02:03.193 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
02:02:03.193 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
02:02:03.315 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
02:02:03.315 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 183 ms
02:02:03.315 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2435,'admin','获取部门信息',0,'com.xsz.system.controller.DeptController.index()','','127.0.0.1','2020-6-15 2:02:03','内网IP|0|0|内网IP|内网IP' )
02:02:11.267 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
02:02:11.267 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
02:02:11.267 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
02:16:30.340 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Validating all active sessions...
02:16:30.350 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Finished session validation.  No sessions were stopped.
23:21:54.865 febs [main] INFO  com.xsz.Application - Starting Application on DESKTOP-5G79DEK with PID 18180 (C:\bseawp\springbootbookcode\voteWeb\target\classes started by jiyu in C:\bseawp\springbootbookcode)
23:21:54.932 febs [main] INFO  com.xsz.Application - No active profile set, falling back to default profiles: default
23:21:55.688 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60015ef5: startup date [Mon Jun 15 23:21:55 CST 2020]; root of context hierarchy
23:22:04.306 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
23:22:05.679 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
23:22:06.033 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
23:22:06.035 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
23:22:06.035 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
23:22:06.035 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
23:22:06.035 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
23:22:06.035 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
23:22:06.035 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
23:22:06.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.xsz.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$99e14d37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:06.193 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
23:22:06.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:06.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:07.077 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
23:22:07.078 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
23:22:07.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:07.132 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:07.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.xsz.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c41d1107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:07.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dcc2bdea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:07.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [com.xsz.common.config.FebsProperties$$EnhancerBySpringCGLIB$$468f92f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:07.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.xsz.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$32812e5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [com.xsz.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$370ce37f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [com.xsz.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f970f1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.128 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$f66eb35c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.130 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
23:22:09.378 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:09.676 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:10.644 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
23:22:10.644 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:10.706 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:11.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.099 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.150 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.xsz.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.xsz.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.xsz.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.xsz.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.xsz.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.xsz.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.533 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:12.570 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:14.078 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9020 (http)
23:22:14.172 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9020"]
23:22:14.317 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
23:22:14.317 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
23:22:14.339 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\jiyu\AppData\Local\Microsoft\WindowsApps;;.]
23:22:14.768 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
23:22:14.768 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 19080 ms
23:22:15.003 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
23:22:15.004 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
23:22:15.004 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
23:22:15.004 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
23:22:15.004 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
23:22:15.004 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
23:22:15.004 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
23:22:15.004 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
23:22:15.005 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
23:22:15.076 febs [localhost-startStop-1] INFO  com.xsz.common.xss.XssFilter - ------------ xss filter init ------------
23:22:16.090 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
23:22:16.101 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
23:22:16.101 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
23:22:16.104 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
23:22:16.105 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
23:22:16.106 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'DESKTOP-5G79DEK1592234536092'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

23:22:16.106 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
23:22:16.106 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
23:22:16.107 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@34a20f16
23:22:16.256 febs [main] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.queryList
23:22:16.257 febs [main] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 112 ms
23:22:16.257 febs [main] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select job_id jobId,bean_name beanName,method_name methodName, params,cron_expression cronExpression,status,remark,create_time createTime from t_job order by job_id
23:22:18.798 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void com.xsz.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,com.xsz.common.exception.FileDownloadException
23:22:18.800 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int com.xsz.common.controller.TestController.testLimiter()
23:22:18.801 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job]}" onto public java.lang.String com.xsz.job.controller.JobController.index()
23:22:18.801 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.addJob(com.xsz.job.domain.Job)
23:22:18.801 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/resume]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.resumeJob(java.lang.String)
23:22:18.801 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.deleteJob(java.lang.String)
23:22:18.801 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/pause]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.pauseJob(java.lang.String)
23:22:18.801 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getJob]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.getJob(java.lang.Long)
23:22:18.801 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/run]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.runJob(java.lang.String)
23:22:18.802 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getSysCronClazz]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.getSysCronClazz(com.xsz.job.domain.Job)
23:22:18.802 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.updateJob(com.xsz.job.domain.Job)
23:22:18.802 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.jobCsv(com.xsz.job.domain.Job)
23:22:18.802 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.job.controller.JobController.jobList(com.xsz.common.domain.QueryRequest,com.xsz.job.domain.Job)
23:22:18.802 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/checkCron]}" onto public boolean com.xsz.job.controller.JobController.checkCron(java.lang.String)
23:22:18.802 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobController.jobExcel(com.xsz.job.domain.Job)
23:22:18.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog]}" onto public java.lang.String com.xsz.job.controller.JobLogController.index()
23:22:18.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobLogController.jobLogExcel(com.xsz.job.domain.JobLog)
23:22:18.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.job.controller.JobLogController.jobLogList(com.xsz.common.domain.QueryRequest,com.xsz.job.domain.JobLog)
23:22:18.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobLogController.jobLogCsv(com.xsz.job.domain.JobLog)
23:22:18.805 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.job.controller.JobLogController.deleteJobLog(java.lang.String)
23:22:18.807 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/category],methods=[POST]}" onto public java.lang.String com.xsz.product.controller.CategoryController.index()
23:22:18.808 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryListPage],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.CategoryController.categoryListPage(com.xsz.common.domain.QueryRequest,com.xsz.product.form.CategoryForm)
23:22:18.808 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryUpdate],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryUpdate(com.xsz.product.form.CategoryForm)
23:22:18.808 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryDelete/{categoryId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryDelete(java.lang.Long)
23:22:18.808 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryList],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryList()
23:22:18.809 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryAdd],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryAdd(com.xsz.product.form.CategoryForm)
23:22:18.809 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/getCategory/{categoryId}],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.getCategory(java.lang.Long)
23:22:18.809 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/category/categoryListByDishes/{dishesId}],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.CategoryController.categoryListByDishes(java.lang.Long)
23:22:18.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishes],methods=[POST]}" onto public java.lang.String com.xsz.product.controller.DishesController.index()
23:22:18.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesAdd],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesAdd(com.xsz.product.form.DishesForm)
23:22:18.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/getDishes/{dishesId}],methods=[GET]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.getDishes(java.lang.Long)
23:22:18.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesDelete],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesDelete(java.lang.String)
23:22:18.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesList],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.DishesController.dishesList(com.xsz.common.domain.QueryRequest,com.xsz.product.form.DishesForm)
23:22:18.813 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesUpdate],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesUpdate(com.xsz.product.form.DishesForm)
23:22:18.813 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesFileUpload/{dishesId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesController.dishesFileUpload(java.lang.Long,javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartHttpServletRequest)
23:22:18.814 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesModelAdd/{dishesId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesModelController.dishesModelAdd(java.lang.Long,java.lang.String)
23:22:18.814 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesModelUpdate/{dishesId}],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.DishesModelController.dishesModelUpdate(java.lang.Long,java.lang.String)
23:22:18.814 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dishes/dishesModelListPage/{dishesId}],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.DishesModelController.dishesModelListPage(com.xsz.common.domain.QueryRequest,java.lang.Long)
23:22:18.816 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/product]}" onto public java.lang.String com.xsz.product.controller.ProductController.index(org.springframework.ui.Model)
23:22:18.816 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.deleteUsers(java.lang.String)
23:22:18.816 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/theme]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updateTheme(com.xsz.system.domain.User)
23:22:18.817 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.userCsv(com.xsz.system.domain.User)
23:22:18.817 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/getUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.getUserProfile(java.lang.Long)
23:22:18.817 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.userExcel(com.xsz.system.domain.User)
23:22:18.817 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/checkPassword]}" onto public boolean com.xsz.product.controller.ProductController.checkPassword(java.lang.String)
23:22:18.817 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.product.controller.ProductController.productList(com.xsz.common.domain.QueryRequest,com.xsz.product.domain.Product)
23:22:18.817 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/getUser]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.getUser(java.lang.Long)
23:22:18.818 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/changeAvatar]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.changeAvatar(java.lang.String)
23:22:18.818 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/regist]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.regist(com.xsz.system.domain.User)
23:22:18.818 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/checkUserName]}" onto public boolean com.xsz.product.controller.ProductController.checkUserName(java.lang.String,java.lang.String)
23:22:18.818 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/profile]}" onto public java.lang.String com.xsz.product.controller.ProductController.profileIndex(org.springframework.ui.Model)
23:22:18.821 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updateUser(com.xsz.system.domain.User,java.lang.Long[])
23:22:18.821 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/updatePassword]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updatePassword(java.lang.String)
23:22:18.821 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.addUser(com.xsz.system.domain.User,java.lang.Long[])
23:22:18.821 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/product/updateUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.product.controller.ProductController.updateUserProfile(com.xsz.system.domain.User)
23:22:18.822 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String com.xsz.system.controller.DeptController.index()
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<com.xsz.system.domain.Dept> com.xsz.system.controller.DeptController.deptList(com.xsz.system.domain.Dept)
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.deptExcel(com.xsz.system.domain.Dept)
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.deleteDepts(java.lang.String)
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.updateRole(com.xsz.system.domain.Dept)
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean com.xsz.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.getDept(java.lang.Long)
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.getDeptTree()
23:22:18.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.deptCsv(com.xsz.system.domain.Dept)
23:22:18.824 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DeptController.addRole(com.xsz.system.domain.Dept)
23:22:18.824 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String com.xsz.system.controller.DictController.index()
23:22:18.824 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.deleteDicts(java.lang.String)
23:22:18.824 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.dictExcel(com.xsz.system.domain.Dict)
23:22:18.825 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.DictController.dictList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.Dict)
23:22:18.825 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.addDict(com.xsz.system.domain.Dict)
23:22:18.825 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.getDict(java.lang.Long)
23:22:18.825 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.updateDict(com.xsz.system.domain.Dict)
23:22:18.825 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.DictController.dictCsv(com.xsz.system.domain.Dict)
23:22:18.826 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String com.xsz.system.controller.LogController.index()
23:22:18.826 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LogController.logCsv(com.xsz.system.domain.SysLog)
23:22:18.826 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.LogController.logList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.SysLog)
23:22:18.826 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LogController.deleteLogss(java.lang.String)
23:22:18.826 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LogController.logExcel(com.xsz.system.domain.SysLog)
23:22:18.827 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String com.xsz.system.controller.LoginController.index(org.springframework.ui.Model)
23:22:18.827 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String com.xsz.system.controller.LoginController.redirectIndex()
23:22:18.827 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void com.xsz.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
23:22:18.828 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String com.xsz.system.controller.LoginController.forbid()
23:22:18.828 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.xsz.system.controller.LoginController.login()
23:22:18.828 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
23:22:18.829 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String com.xsz.system.controller.MenuController.index()
23:22:18.829 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenuTree()
23:22:18.829 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getUserMenu(java.lang.String)
23:22:18.829 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.addMenu(com.xsz.system.domain.Menu)
23:22:18.829 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.deleteMenus(java.lang.String)
23:22:18.830 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.updateMenu(com.xsz.system.domain.Menu)
23:22:18.830 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean com.xsz.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
23:22:18.830 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenu(java.lang.String)
23:22:18.830 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenu(java.lang.Long)
23:22:18.830 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.menuExcel(com.xsz.system.domain.Menu)
23:22:18.830 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> com.xsz.system.controller.MenuController.getAllUrl()
23:22:18.830 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.menuCsv(com.xsz.system.domain.Menu)
23:22:18.831 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<com.xsz.system.domain.Menu> com.xsz.system.controller.MenuController.menuList(com.xsz.system.domain.Menu)
23:22:18.831 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.MenuController.getMenuButtonTree()
23:22:18.832 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.get(java.lang.String)
23:22:18.832 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.keys(java.lang.String)
23:22:18.832 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.set(java.lang.String)
23:22:18.832 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.exists(java.lang.String)
23:22:18.832 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.del(java.lang.String)
23:22:18.833 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String com.xsz.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
23:22:18.833 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.pttl(java.lang.String)
23:22:18.833 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String com.xsz.system.controller.RedisController.getMemoryInfo()
23:22:18.833 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RedisController.pexpire(java.lang.String)
23:22:18.833 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String com.xsz.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
23:22:18.833 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String com.xsz.system.controller.RedisController.getKeysSize()
23:22:18.834 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String com.xsz.system.controller.RoleController.index()
23:22:18.834 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.getRole(java.lang.Long)
23:22:18.834 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.roleCsv(com.xsz.system.domain.Role)
23:22:18.834 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.RoleController.roleList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.Role)
23:22:18.834 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.roleExcel(com.xsz.system.domain.Role)
23:22:18.834 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.updateRole(com.xsz.system.domain.Role,java.lang.Long[])
23:22:18.835 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.addRole(com.xsz.system.domain.Role,java.lang.Long[])
23:22:18.835 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean com.xsz.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
23:22:18.835 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.RoleController.deleteRoles(java.lang.String)
23:22:18.835 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.SessionController.list()
23:22:18.835 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String com.xsz.system.controller.SessionController.online()
23:22:18.835 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.SessionController.forceLogout(java.lang.String)
23:22:18.836 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user]}" onto public java.lang.String com.xsz.system.controller.UserController.index(org.springframework.ui.Model)
23:22:18.836 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.system.controller.UserController.userList(com.xsz.common.domain.QueryRequest,com.xsz.system.domain.User)
23:22:18.836 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.deleteUsers(java.lang.String)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/theme]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updateTheme(com.xsz.system.domain.User)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.userCsv(com.xsz.system.domain.User)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/getUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.getUserProfile(java.lang.Long)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.userExcel(com.xsz.system.domain.User)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/checkPassword]}" onto public boolean com.xsz.system.controller.UserController.checkPassword(java.lang.String)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/getUser]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.getUser(java.lang.Long)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/changeAvatar]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.changeAvatar(java.lang.String)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/regist]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.regist(com.xsz.system.domain.User)
23:22:18.837 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/checkUserName]}" onto public boolean com.xsz.system.controller.UserController.checkUserName(java.lang.String,java.lang.String)
23:22:18.838 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/profile]}" onto public java.lang.String com.xsz.system.controller.UserController.profileIndex(org.springframework.ui.Model)
23:22:18.838 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updateUser(com.xsz.system.domain.User,java.lang.Long[])
23:22:18.838 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/updatePassword]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updatePassword(java.lang.String)
23:22:18.838 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.addUser(com.xsz.system.domain.User,java.lang.Long[])
23:22:18.838 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/updateUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.system.controller.UserController.updateUserProfile(com.xsz.system.domain.User)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote]}" onto public java.lang.String com.xsz.vote.controller.VoteController.index(org.springframework.ui.Model)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/delete]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.deleteUsers(java.lang.String)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/theme]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updateTheme(com.xsz.system.domain.User)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/csv]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.userCsv(com.xsz.system.domain.User)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/getUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.getUserProfile(java.lang.Long)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/excel]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.userExcel(com.xsz.system.domain.User)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/checkPassword]}" onto public boolean com.xsz.vote.controller.VoteController.checkPassword(java.lang.String)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/getUser]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.getUser(java.lang.Long)
23:22:18.840 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/changeAvatar]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.changeAvatar(java.lang.String)
23:22:18.841 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/regist]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.regist(com.xsz.system.domain.User)
23:22:18.841 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/checkUserName]}" onto public boolean com.xsz.vote.controller.VoteController.checkUserName(java.lang.String,java.lang.String)
23:22:18.841 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/profile]}" onto public java.lang.String com.xsz.vote.controller.VoteController.profileIndex(org.springframework.ui.Model)
23:22:18.841 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/update]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updateUser(com.xsz.system.domain.User,java.lang.Long[])
23:22:18.841 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/updatePassword]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updatePassword(java.lang.String)
23:22:18.845 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/user/updateUserProfile]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.updateUserProfile(com.xsz.system.domain.User)
23:22:18.845 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.xsz.vote.controller.VoteController.voteList(com.xsz.common.domain.QueryRequest,com.xsz.vote.domain.Vote)
23:22:18.845 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/vote/add]}" onto public com.xsz.common.domain.ResponseBo com.xsz.vote.controller.VoteController.addVote(com.xsz.vote.domain.Vote)
23:22:18.845 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String com.xsz.web.controller.ArticleController.index()
23:22:18.846 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.ArticleController.queryArticle(java.lang.String)
23:22:18.846 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getMovieComing()
23:22:18.846 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getComments(java.lang.String)
23:22:18.846 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String com.xsz.web.controller.MovieController.movieHot()
23:22:18.846 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getDetail(java.lang.String)
23:22:18.847 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String com.xsz.web.controller.MovieController.movieComing()
23:22:18.847 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.MovieController.getMoiveHot()
23:22:18.847 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
23:22:18.847 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
23:22:18.847 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getOneList()
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getReadingList()
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.OneIsAllController.getEssayComments(java.lang.String)
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String com.xsz.web.controller.OneIsAllController.essayIndex()
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String com.xsz.web.controller.OneIsAllController.paintIndex()
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String com.xsz.web.controller.OneIsAllController.yuwenIndex()
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public com.xsz.common.domain.ResponseBo com.xsz.web.controller.WeatherController.queryWeather(java.lang.String)
23:22:18.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String com.xsz.web.controller.WeatherController.weather()
23:22:18.849 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
23:22:18.851 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
23:22:18.852 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
23:22:18.853 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
23:22:18.855 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
23:22:18.856 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
23:22:19.179 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
23:22:19.570 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
23:22:19.939 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60015ef5: startup date [Mon Jun 15 23:21:55 CST 2020]; root of context hierarchy
23:22:20.067 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
23:22:20.067 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
23:22:20.067 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/images/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
23:22:20.092 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
23:22:20.092 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in controllerExceptionHandler
23:22:20.307 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
23:22:22.006 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
23:22:22.007 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
23:22:22.008 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
23:22:22.014 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
23:22:22.015 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
23:22:22.038 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
23:22:22.038 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
23:22:22.228 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
23:22:22.268 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
23:22:23.070 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
23:22:23.094 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9020"]
23:22:23.341 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
23:22:23.503 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9020 (http) with context path ''
23:22:23.620 febs [main] INFO  com.xsz.Application - Started Application in 33.806 seconds (JVM running for 46.58)
23:22:23.627 febs [main] INFO  c.x.c.r.ApplicationStartupRunner - XSZ 权限系统启动完毕，地址：http://192.168.3.30:9020
23:22:24.072 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
23:22:24.186 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
23:22:24.186 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "DESKTOP-5G79DEK1592151380490"'s failed in-progress jobs.
23:22:24.343 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-5G79DEK1592234536092 started.
23:24:41.816 febs [http-nio-9020-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
23:24:41.816 febs [http-nio-9020-exec-3] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
23:24:41.838 febs [http-nio-9020-exec-3] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
23:24:41.933 febs [http-nio-9020-exec-3] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
23:26:14.605 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.selectByExample
23:26:14.605 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 215 ms
23:26:14.605 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( ( lower(username)= 'admin' ) )
23:26:14.647 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.updateByExampleSelective
23:26:14.647 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
23:26:14.647 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2020-6-15 23:26:14' WHERE ( ( lower(username)= 'admin' ) )
23:26:16.926 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:26:16.927 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1276 ms
23:26:16.927 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2436,'admin','访问系统',2,'com.xsz.system.controller.LoginController.index()','user: "User{userId=167, username='admin', password='8b9196ebe9f537da256b424f1fc93041', deptId=1, deptName='null', email='', mobile='', status='1', crateTime=Fri May 29 22:02:05 CST 2020, modifyTime=null, lastLoginTime=Mon Jun 15 01:58:55 CST 2020, ssex='0', theme='green', avatar='default.jpg', description='null', roleName='null'}"','192.168.3.30','2020-6-15 23:26:16','内网IP|0|0|内网IP|内网IP' )
23:26:21.127 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserMenus
23:26:21.127 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 623 ms
23:26:21.127 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:26:28.169 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.findUserRole
23:26:28.169 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
23:26:28.169 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
23:26:28.173 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.findUserPermissions
23:26:28.173 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:26:28.173 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
23:26:28.366 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
23:26:28.366 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 75 ms
23:26:28.366 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:26:28.476 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
23:26:28.476 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:26:28.476 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:26:28.479 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
23:26:28.479 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:26:28.479 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:26:28.648 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:26:28.649 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 140 ms
23:26:28.649 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2437,'admin','获取用户信息',159,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','192.168.3.30','2020-6-15 23:26:28','内网IP|0|0|内网IP|内网IP' )
23:26:30.639 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:26:30.639 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 362 ms
23:26:30.639 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2438,'admin','获取菜单信息',0,'com.xsz.system.controller.MenuController.index()','','192.168.3.30','2020-6-15 23:26:30','内网IP|0|0|内网IP|内网IP' )
23:26:30.858 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
23:26:30.858 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
23:26:30.858 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( ( type = 0 ) ) order by create_time
23:26:30.895 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
23:26:30.895 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
23:26:30.895 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
23:26:31.026 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:26:31.026 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 89 ms
23:26:31.026 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2439,'admin','获取系统所有URL',1,'com.xsz.system.controller.MenuController.getAllUrl()','','192.168.3.30','2020-6-15 23:26:31','内网IP|0|0|内网IP|内网IP' )
23:26:42.271 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:26:42.271 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 187 ms
23:26:42.271 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2440,'admin','获取字典信息',1,'com.xsz.system.controller.DictController.index()','','192.168.3.30','2020-6-15 23:26:42','内网IP|0|0|内网IP|内网IP' )
23:28:01.371 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.insert
23:28:01.371 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 24 ms
23:28:01.371 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_dict ( DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME ) VALUES( 37,'0','草稿','tb_d_vote','STATUS' )
23:28:01.746 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.selectByExample_COUNT
23:28:01.746 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:28:01.746 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME FROM t_dict order by dict_id
23:28:01.750 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.selectByExample
23:28:01.750 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:28:01.750 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME FROM t_dict order by dict_id
23:28:01.806 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:28:01.806 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 187 ms
23:28:01.806 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2441,'admin','新增字典',279,'com.xsz.system.controller.DictController.addDict()','dict: "Dict{dictId=37, keyy=0, valuee=草稿, tableName=tb_d_vote, fieldName=STATUS}"','192.168.3.30','2020-6-15 23:28:01','内网IP|0|0|内网IP|内网IP' )
23:28:46.346 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.insert
23:28:46.346 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
23:28:46.346 febs [http-nio-9020-exec-10] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_dict ( DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME ) VALUES( 38,'1','已发布','tb_d_vote','STATUS' )
23:28:46.708 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.selectByExample_COUNT
23:28:46.708 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 101 ms
23:28:46.708 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME FROM t_dict order by dict_id
23:28:46.713 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.selectByExample
23:28:46.713 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:28:46.713 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME FROM t_dict order by dict_id
23:28:46.740 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:28:46.741 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 163 ms
23:28:46.741 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2442,'admin','新增字典',247,'com.xsz.system.controller.DictController.addDict()','dict: "Dict{dictId=38, keyy=1, valuee=已发布, tableName=tb_d_vote, fieldName=STATUS}"','192.168.3.30','2020-6-15 23:28:46','内网IP|0|0|内网IP|内网IP' )
23:29:05.698 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:29:05.699 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 454 ms
23:29:05.699 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2443,'admin','获取定时任务信息',2,'com.xsz.job.controller.JobController.index()','','192.168.3.30','2020-6-15 23:29:05','内网IP|0|0|内网IP|内网IP' )
23:29:05.821 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample_COUNT
23:29:05.822 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 58 ms
23:29:05.822 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
23:29:05.835 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample
23:29:05.835 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
23:29:05.836 febs [http-nio-9020-exec-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
23:29:09.529 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:29:09.529 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 308 ms
23:29:09.529 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2444,'admin','获取调度日志信息',2,'com.xsz.job.controller.JobLogController.index()','','192.168.3.30','2020-6-15 23:29:09','内网IP|0|0|内网IP|内网IP' )
23:29:10.009 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample_COUNT
23:29:10.009 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 460 ms
23:29:10.010 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
23:29:10.015 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobLogMapper.selectByExample
23:29:10.015 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
23:29:10.015 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT LOG_ID,JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,STATUS,ERROR,TIMES,CREATE_TIME FROM t_job_log order by log_id desc
23:29:19.571 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample_COUNT
23:29:19.572 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:29:19.572 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
23:29:19.573 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByExample
23:29:19.574 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:29:19.574 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job order by job_id
23:29:19.670 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:29:19.670 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 336 ms
23:29:19.671 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2445,'admin','获取定时任务信息',0,'com.xsz.job.controller.JobController.index()','','192.168.3.30','2020-6-15 23:29:19','内网IP|0|0|内网IP|内网IP' )
23:35:14.253 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.job.dao.JobMapper.selectByPrimaryKey
23:35:14.253 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 32 ms
23:35:14.253 febs [http-nio-9020-exec-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT JOB_ID,BEAN_NAME,METHOD_NAME,PARAMS,CRON_EXPRESSION,STATUS,REMARK,CREATE_TIME FROM t_job WHERE JOB_ID = 1
23:35:24.711 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.selectByExample_COUNT
23:35:24.711 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 117 ms
23:35:24.711 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
23:35:24.715 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.selectByExample
23:35:24.715 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
23:35:24.715 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
23:35:29.455 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
23:35:29.455 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 61 ms
23:35:29.455 febs [http-nio-9020-exec-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:35:29.544 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
23:35:29.544 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 150 ms
23:35:29.544 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:35:29.547 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
23:35:29.547 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:35:29.547 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:35:29.692 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:35:29.693 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 240 ms
23:35:29.693 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2446,'admin','获取用户信息',2,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','192.168.3.30','2020-6-15 23:35:29','内网IP|0|0|内网IP|内网IP' )
23:35:56.752 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.deleteByExample
23:35:56.752 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 58 ms
23:35:56.752 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_user WHERE ( ( USER_ID in ( '4' ) ) )
23:35:56.866 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserRoleMapper.deleteByExample
23:35:56.867 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 108 ms
23:35:56.867 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_user_role WHERE ( ( USER_ID in ( '4' ) ) )
23:35:57.118 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:35:57.118 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 149 ms
23:35:57.118 febs [asyncTaskExecutor-2] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2447,'admin','删除用户',270,'com.xsz.system.controller.UserController.deleteUsers()','ids: "4"','192.168.3.30','2020-6-15 23:35:57','内网IP|0|0|内网IP|内网IP' )
23:35:57.151 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.findUserWithDept_COUNT
23:35:57.151 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:35:57.152 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
23:35:57.153 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.UserMapper.findUserWithDept
23:35:57.153 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:35:57.154 febs [http-nio-9020-exec-7] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
23:35:57.307 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:35:57.307 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 150 ms
23:35:57.307 febs [asyncTaskExecutor-3] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2448,'admin','获取用户信息',170,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','192.168.3.30','2020-6-15 23:35:57','内网IP|0|0|内网IP|内网IP' )
23:36:41.272 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:36:41.272 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 190 ms
23:36:41.272 febs [asyncTaskExecutor-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2449,'admin','获取字典信息',0,'com.xsz.system.controller.DictController.index()','','192.168.3.30','2020-6-15 23:36:41','内网IP|0|0|内网IP|内网IP' )
23:36:44.537 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.selectByExample_COUNT
23:36:44.538 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
23:36:44.538 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME FROM t_dict order by dict_id
23:36:44.539 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DictMapper.selectByExample
23:36:44.539 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:36:44.539 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME FROM t_dict order by dict_id
23:36:52.781 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:36:52.781 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 220 ms
23:36:52.781 febs [asyncTaskExecutor-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2450,'admin','获取角色信息',0,'com.xsz.system.controller.RoleController.index()','','192.168.3.30','2020-6-15 23:36:52','内网IP|0|0|内网IP|内网IP' )
23:36:52.869 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.MenuMapper.selectByExample
23:36:52.869 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
23:36:52.869 febs [http-nio-9020-exec-6] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
23:36:52.916 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
23:36:52.916 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:36:52.917 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:36:52.919 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
23:36:52.919 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
23:36:52.919 febs [http-nio-9020-exec-5] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:36:56.682 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample_COUNT
23:36:56.682 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:36:56.682 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:36:56.683 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.DeptMapper.selectByExample
23:36:56.683 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
23:36:56.683 febs [http-nio-9020-exec-8] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:36:56.684 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.RoleMapper.selectByExample
23:36:56.684 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
23:36:56.684 febs [http-nio-9020-exec-4] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:36:56.830 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> com.xsz.system.dao.LogMapper.insert
23:36:56.830 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 106 ms
23:36:56.831 febs [asyncTaskExecutor-1] INFO  c.x.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2451,'admin','获取用户信息',1,'com.xsz.system.controller.UserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','192.168.3.30','2020-6-15 23:36:56','内网IP|0|0|内网IP|内网IP' )
